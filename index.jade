  style.
    body {
     color: #ff6600;
    }
  scirpt.
   var jadeVersion = '1.1';
  h2 for each
  - var values = {'key1':'value1','key2':'value2'};
  - for (key in values)
    p= values[key]

  each value, key in values
    p #{key} : #{value}

  - var fw = ['node','jade','socket.io']
  each item in fw
    p= item
    
  - var res = [{id:1,items:['item1','item2']},{id:2,items:['item3','item4']}]
  each ele in res.length > 0 ? res : []
   dl
    dt= ele.id
    each item in ele.items
     dl= item
     
  h2 while用法
  - var n = 0
  ul
   while n < 4
    li= n++
    
  h2 转义
  - var htmlData = '<script>alert("haha")</script>'
  p data is #{htmlData}
  p= htmlData
  p !{htmlData}
  p!= htmlData
  p \#{htmlData}
  p \!{htmlData}
  input(value='#{course1}') 
  // 直接=，则undefined的时候就留空了，instead of display undefined
  input(value=course1)
  h1 注释
  h2 单行注释
  // h1#title.title2.title(style="display:none;")  jade engine study sdsd 
  h2 非缓冲注释
  //- .divClass#divId
  .divClass#divId
  h2 块注释
  //
    a(href='http://companion.3ds.com',tile='immoc jade',data-uid='1000') link
    input(name='course',type='text',value='jade')
    input(name='type',type='checkbox', checked)
  //-
    a(href='http://companion.3ds.com',tile='immoc jade',data-uid='1000') link
    input(name='course',type='text',value='jade')
    input(name='type',type='checkbox', checked)  
  p.
    上面2节我们已经掌握 JS 模块和 CSS 模块的处理，
    并且能够让 CSS 独立生成文件了，<span>haha</span>
    现在我们觉得每次修改代码然后 build
  p
    | 1. A
    strong 1.1 A1
    | 2. B
    | 3. C
</html>